{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "defaultValue": "IntuneProfileChangeNotification",
            "type": "String"
        },
        "keyvault-name": {
            "type": "String",
            "metadata" : {
                "description" : "Name of the Key Vault that contains the App Registration Secret"
            }
        },
        "webhook-uri": {
            "type": "String",
            "metadata" : {
                "description" : "Teams webhook URI"
            }
        }
    },
    "variables": {
        "KeyvaultConnectionName": "[concat('keyvault-', parameters('LogicAppName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
             "location": "[resourceGroup().location]",
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Parse_JSON_select_values')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "HTTP_POST": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "body": {
                                                    "text": "**Activity:** @{items('For_each')['displayName']}\n\n **Profile Name:** @{items('For_each')['resourcesdisplayName']}\n\n **Date:** @{items('For_each')['activityDateTime']}\n\n **Component Name:** @{items('For_each')['componentName']}\n\n **Actor:** \n\n **UPN:** @{items('For_each')['actoruserPrincipalName']}\n\n **Type:** @{items('For_each')['actortype']}\n\n",
                                                    "title": "Intune profile activity '@{items('For_each')['resourcesdisplayName']}' - @{items('For_each')['activityOperationType']}"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "[parameters('webhook-uri')]"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "startsWith": [
                                                    "@items('For_each')['resourcesdisplayName']",
                                                    "PRD"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_select_values": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP_GET_Intune_Audit_Events": {
                            "runAfter": {
                                "client-secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "@body('client-id')?['value']",
                                    "secret": "@body('client-secret')?['value']",
                                    "tenant": "@body('tenant-id')?['value']",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/beta/deviceManagement/auditEvents?$filter=%20activityDateTime%20gt%20@{formatDateTime(addHours(utcNow(),-1),'yyyy-MM-ddTHH:mm:ssZ')}"
                            }
                        },
                        "Parse_JSON_select_values": {
                            "runAfter": {
                                "Select": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Select')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "activityDateTime": {
                                                "type": "string"
                                            },
                                            "activityOperationType": {
                                                "type": "string"
                                            },
                                            "actortype": {
                                                "type": "string"
                                            },
                                            "actoruserPrincipalName": {
                                                "type": "string"
                                            },
                                            "componentName": {
                                                "type": "string"
                                            },
                                            "displayName": {
                                                "type": "string"
                                            },
                                            "resourcesdisplayName": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "activityDateTime",
                                            "activityOperationType",
                                            "actortype",
                                            "actoruserPrincipalName",
                                            "componentName",
                                            "displayName",
                                            "resourcesdisplayName"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Select": {
                            "runAfter": {
                                "HTTP_GET_Intune_Audit_Events": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('HTTP_GET_Intune_Audit_Events')?['value']",
                                "select": {
                                    "activityDateTime": "@item()?['activityDateTime']",
                                    "activityOperationType": "@item()?['activityOperationType']",
                                    "actortype": "@item()?['actor']?['type']",
                                    "actoruserPrincipalName": "@item()?['actor']?['userPrincipalName']",
                                    "componentName": "@item()?['componentName']",
                                    "displayName": "@item()?['displayName']",
                                    "resourcesdisplayName": "@item()['Resources']?[0]?['displayName']"
                                }
                            }
                        },
                        "client-id": {
                            "runAfter": {
                                "tenant-id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('client-id')}/value"
                            }
                        },
                        "client-secret": {
                            "runAfter": {
                                "client-id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('client-secret')}/value"
                            }
                        },
                        "tenant-id": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('tenant-id')}/value"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                        "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('KeyvaultConnectionName')]",
                "ParameterValues": {
                    "vaultName": "[parameters('keyvault-name')]"
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        }
    ]
}